{
  "name": "fnr",
  "version": "0.0.5",
  "description": "Fullstack Node React",
  "main": "src/backend/main/index.ts",
  "scripts": {
    "build": "wireit",
    "build:apidoc": "wireit",
    "build:backend": "wireit",
    "build:backend:check-typedefs": "wireit",
    "build:backend:transpile": "wireit",
    "clean": "wireit",
    "clean:npm": "wireit",
    "clean:npm:cache": "wireit",
    "clean:npm:cache:npx": "wireit",
    "clean:npm:deps": "wireit",
    "clean:wireit": "wireit",
    "cover": "wireit",
    "cover:backend": "wireit",
    "cover:backend:open": "wireit",
    "cover:backend:e2e": "wireit",
    "cover:backend:e2e:open": "wireit",
    "cover:backend:unit": "wireit",
    "cover:backend:unit:open": "wireit",
    "cover:open": "wireit",
    "deps:check": "wireit",
    "deps:cruiser:init": "npm run with:dependency-cruiser -- --init",
    "deps:cruiser:build": "wireit",
    "deps:cruiser:open": "npm run with:opener dist/dependency-graph.svg",
    "deps:version:check": "wireit",
    "deps:version:update": "wireit",
    "dev": "npm run start:development --watch",
    "lint": "wireit",
    "lint:src": "wireit",
    "lint:backend": "wireit",
    "load-test": "npm run with:artillery -- run load-tests/scenario.yaml",
    "prisma:generate": "wireit",
    "prisma:migrate:create": "npm run with:dotenv -- -e .env -e .env.local prisma migrate dev --create-only",
    "prisma:migrate:dev": "npm run with:dotenv -- -e .env -e .env.local prisma migrate dev",
    "prisma:migrate:dev:test": "npm run with:dotenv -- -e .env.test prisma migrate dev",
    "prisma:migrate:deploy": "prisma migrate deploy",
    "prisma:migrate:deploy:test": "npm run with:dotenv -- -e .env.test prisma migrate deploy",
    "prisma:migrate:reset": "npm run with:dotenv -- -e .env -e .env.local prisma migrate reset",
    "prisma:migrate:reset:test": "npm run with:dotenv -- -e .env.test prisma migrate reset",
    "prisma:studio": "prisma studio",
    "sonar:scan": "wireit",
    "sonar:scan:only": "wireit",
    "start": "per-env",
    "start:development": "wireit",
    "start:production": "wireit",
    "test": "wireit",
    "test:open": "wireit",
    "test:backend": "wireit",
    "test:backend:open": "wireit",
    "test:backend:e2e": "wireit",
    "test:backend:e2e:open": "wireit",
    "test:backend:unit": "wireit",
    "test:backend:unit:open": "wireit",
    "validate": "wireit",
    "validate:build": "wireit",
    "with:artillery": "npx -y artillery@2.0.6",
    "with:depcheck": "npx -y depcheck@1.4.3",
    "with:dependency-cruiser": "npx -y dependency-cruiser@16.2.0",
    "with:dotenv": "npx -y dotenv-cli@7.3.0",
    "with:npm-check-updates": "npx -y npm-check-updates@16.7.12",
    "with:opener": "npx -y opener@1.5.2",
    "with:redoc-cli": "npx -y @redocly/cli@1.0.0-beta.124",
    "with:release-it": "npx -y release-it@15.8.0"
  },
  "author": "Olivier Penhoat <openhoat@gmail.com> (http://headwood.net/)",
  "license": "ISC",
  "wireit": {
    "build": {
      "dependencies": [
        "build:backend",
        "build:apidoc"
      ]
    },
    "build:apidoc": {
      "command": "npm run with:redoc-cli build-docs swagger/openapi.yaml -- -o dist/apidoc/index.html",
      "files": [
        "swagger/**/*.yaml"
      ],
      "output": [
        "dist/apidoc/**"
      ]
    },
    "build:backend": {
      "dependencies": [
        "build:backend:check-typedefs",
        "build:backend:transpile"
      ]
    },
    "build:backend:check-typedefs": {
      "command": "tsc --noemit --preserveWatchOutput -p src/backend/main/tsconfig.json",
      "files": [
        "tsconfig.json",
        "src/tsconfig.json",
        "src/backend/tsconfig.json",
        "src/backend/**/*.ts",
        "src/common/**/*.ts"
      ],
      "dependencies": [
        "prisma:generate"
      ],
      "output": []
    },
    "build:backend:transpile": {
      "command": "swc -s --strip-leading-paths -d lib src/backend/main src/common",
      "files": [
        "tsconfig.json",
        "src/tsconfig.json",
        "src/backend/tsconfig.json",
        "src/backend/**/*.ts",
        "src/common/**/*.ts"
      ],
      "output": [
        "lib/backend/**"
      ]
    },
    "clean": {
      "command": "rimraf -g dist lib src/**/.swc src/**/tsconfig.tsbuildinfo"
    },
    "clean:npm": {
      "dependencies": [
        "clean:npm:deps",
        "clean:npm:cache"
      ]
    },
    "clean:npm:cache": {
      "command": "npm cache clean --force",
      "dependencies": [
        "clean:npm:cache:npx"
      ]
    },
    "clean:npm:cache:npx": {
      "command": "npx -y clear-npx-cache"
    },
    "clean:npm:deps": {
      "command": "rimraf node_modules python_modules package-lock.json"
    },
    "clean:wireit": {
      "command": "rimraf .wireit"
    },
    "cover": {
      "dependencies": [
        "cover:backend"
      ]
    },
    "cover:backend": {
      "command": "jest --coverage --runInBand -c src/backend/test/jest.config.ts",
      "files": [
        "src/backend/main/**",
        "src/backend/test/**",
        "dist/client/**",
        "package.json"
      ],
      "output": [
        "dist/coverage/backend/all/index.html"
      ],
      "dependencies": [
        "build:apidoc"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "cover:backend:open": {
      "command": "npm run with:opener dist/coverage/backend/all/index.html"
    },
    "cover:backend:e2e": {
      "command": "jest --coverage --runInBand -c src/backend/test/e2e/jest.config.ts",
      "files": [
        "src/backend/main/**",
        "src/backend/test/*",
        "package.json"
      ],
      "output": [
        "dist/coverage/backend/e2e/index.html"
      ],
      "dependencies": [
        "build:apidoc"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "cover:backend:e2e:open": {
      "command": "npm run with:opener dist/coverage/backend/e2e/index.html"
    },
    "cover:backend:unit": {
      "command": "jest --coverage --runInBand -c src/backend/test/unit/jest.config.ts",
      "files": [
        "src/backend/main/**",
        "src/backend/test/**",
        "package.json"
      ],
      "output": [
        "dist/coverage/backend/unit/index.html"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "cover:backend:unit:open": {
      "command": "npm run with:opener dist/coverage/backend/unit/index.html"
    },
    "cover:open": {
      "dependencies": [
        "cover:backend:open"
      ]
    },
    "deps:check": {
      "command": "npm run with:depcheck",
      "files": [
        "src/**/*.[jt]s",
        ".eslintrc.json",
        "package.json",
        ".depcheckrc"
      ],
      "output": []
    },
    "deps:cruiser:build": {
      "dependencies": [
        "deps:cruiser:build:svg"
      ]
    },
    "deps:cruiser:build:dot": {
      "command": "npm run with:dependency-cruiser -- src/backend/main -x '^(src/backend/main/types|node_modules)' --output-type dot -f dist/dependency-graph.dot",
      "files": [
        "tsconfig.json",
        "src/tsconfig.json",
        "src/backend/tsconfig.json",
        "src/backend/**/*.ts",
        "src/common/**/*.ts"
      ],
      "output": [
        "dist/dependency-graph.dot"
      ]
    },
    "deps:cruiser:build:svg": {
      "command": "dot -T svg -o dist/dependency-graph.svg dist/dependency-graph.dot",
      "dependencies": [
        "deps:cruiser:build:dot"
      ],
      "files": [
        "dist/dependency-graph.dot"
      ],
      "output": [
        "dependency-graph.svg"
      ]
    },
    "deps:version:check": {
      "command": "npm run with:npm-check-updates",
      "files": [
        "package.json"
      ]
    },
    "deps:version:update": {
      "command": "npm run with:npm-check-updates -- -u",
      "files": [
        "package.json",
        "package-lock.json"
      ],
      "output": []
    },
    "lint": {
      "dependencies": [
        "lint:backend"
      ]
    },
    "lint:backend": {
      "command": "eslint src/backend/main",
      "files": [
        ".eslintrc.json",
        "tsconfig.json",
        "src/tsconfig.json",
        "src/backend/tsconfig.json",
        "src/backend/main/**"
      ],
      "output": []
    },
    "prettier": {
      "command": "prettier --check .",
      "output": []
    },
    "prisma:generate": {
      "command": "prisma generate",
      "files": [
        "prisma/**"
      ],
      "output": [
        "node_modules/.prisma/client/**"
      ]
    },
    "sonar:scan": {
      "command": "bin/compose sonar up --force-recreate sonar-scanner",
      "dependencies": [
        "cover"
      ]
    },
    "sonar:scan:only": {
      "command": "bin/compose sonar up --force-recreate sonar-scanner"
    },
    "start:development": {
      "command": "node -r @swc-node/register src/backend/main",
      "env": {
        "NODE_ENV": "development"
      },
      "service": true,
      "files": [
        "src/backend/main/**/*.ts",
        "swagger/**/*.yaml",
        ".env",
        ".env.local",
        ".envrc",
        "package.json",
        "package-lock.json"
      ],
      "dependencies": [
        {
          "script": "build:apidoc",
          "cascade": false
        },
        {
          "script": "build:backend:check-typedefs",
          "cascade": false
        }
      ]
    },
    "start:production": {
      "command": "node --enable-source-maps lib/backend/main",
      "env": {
        "NODE_ENV": "production"
      },
      "service": true,
      "files": [
        "lib/backend/main/**/*.js",
        "swagger/**/*.yaml",
        ".env",
        ".env.local",
        ".envrc",
        "package.json",
        "package-lock.json"
      ]
    },
    "test": {
      "dependencies": [
        "test:backend"
      ]
    },
    "test:open": {
      "dependencies": [
        "test:backend:open"
      ]
    },
    "test:backend": {
      "command": "jest --runInBand -c src/backend/test/jest.config.ts",
      "files": [
        "src/backend/main/**",
        "src/backend/test/**",
        "package.json"
      ],
      "output": [
        "dist/test/backend-tests-report.html"
      ],
      "dependencies": [
        "prisma:generate",
        "build:apidoc"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "test:backend:open": {
      "command": "npm run with:opener dist/test/backend-tests-report.html"
    },
    "test:backend:e2e": {
      "command": "jest --runInBand -c src/backend/test/e2e/jest.config.ts",
      "files": [
        "src/backend/main/**",
        "src/backend/test/*",
        "package.json"
      ],
      "output": [
        "dist/test/backend-e2e-tests-report.html"
      ],
      "dependencies": [
        "build:apidoc",
        "prisma:generate"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "test:backend:e2e:open": {
      "command": "npm run with:opener dist/test/backend-e2e-tests-report.html"
    },
    "test:backend:unit": {
      "command": "jest --runInBand -c src/backend/test/unit/jest.config.ts",
      "files": [
        "src/backend/test/unit/**",
        "src/backend/test/*"
      ],
      "output": [
        "dist/test/backend-unit-tests-report.html"
      ],
      "dependencies": [
        "prisma:generate"
      ],
      "env": {
        "CI": {
          "external": true
        }
      }
    },
    "test:backend:unit:open": {
      "command": "npm run with:opener dist/test/backend-unit-tests-report.html"
    },
    "validate": {
      "dependencies": [
        "deps:check",
        "build",
        "lint",
        "cover"
      ]
    }
  },
  "engines": {
    "node": "^20.11.0",
    "npm": "^10.5.0"
  },
  "volta": {
    "node": "20.11.1",
    "npm": "10.5.0"
  },
  "dependencies": {
    "@fastify/accepts": "4.3.0",
    "@fastify/basic-auth": "5.1.1",
    "@fastify/cookie": "9.3.1",
    "@fastify/cors": "9.0.1",
    "@fastify/formbody": "7.4.0",
    "@fastify/jwt": "8.0.0",
    "@fastify/static": "7.0.1",
    "@fastify/swagger": "8.14.0",
    "@fastify/swagger-ui": "2.0.1",
    "@graphql-tools/schema": "10.0.2",
    "@graphql-tools/utils": "10.0.13",
    "@hapi/boom": "10.0.1",
    "@prisma/client": "5.11.0-dev.50",
    "bcryptjs": "2.4.3",
    "common-tags": "1.8.2",
    "dotenv": "16.4.4",
    "fastify": "4.26.1",
    "fastify-graceful-shutdown": "3.5.1",
    "fastify-plugin": "4.5.1",
    "find-root": "1.1.0",
    "graphql": "16.8.1",
    "graphql-scalars": "1.22.4",
    "graphql-tag": "2.12.6",
    "http-status-codes": "2.3.0",
    "inversify": "6.0.2",
    "joi": "17.12.1",
    "mercurius": "13.3.3",
    "mercurius-auth": "5.0.0",
    "per-env": "1.0.2",
    "pino": "8.18.0",
    "pino-pretty": "10.3.1",
    "prisma": "5.11.0-dev.50"
  },
  "devDependencies": {
    "@jest/types": "29.6.3",
    "@swc-node/register": "1.8.0",
    "@swc/cli": "0.3.9",
    "@swc/core": "1.3.105",
    "@swc/jest": "0.2.36",
    "@types/bcryptjs": "2.4.6",
    "@types/common-tags": "1.8.4",
    "@types/find-root": "1.1.4",
    "@types/jest-when": "3.5.5",
    "@types/node": "20.11.18",
    "@typescript-eslint/eslint-plugin": "7.0.1",
    "@typescript-eslint/parser": "7.0.1",
    "commitlint": "18.6.1",
    "cross-env": "7.0.3",
    "eslint": "8.56.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-prettier": "5.1.3",
    "eslint-plugin-simple-import-sort": "12.0.0",
    "eslint-plugin-sonarjs": "0.24.0",
    "eslint-plugin-sort-class-members": "1.19.0",
    "eslint-plugin-sort-keys-shorthand": "2.2.0",
    "eslint-plugin-unicorn": "51.0.1",
    "husky": "9.0.11",
    "jest": "29.7.0",
    "jest-html-reporter": "3.10.2",
    "jest-junit": "16.0.0",
    "jest-when": "3.6.0",
    "jsdoc": "4.0.2",
    "jsdoc-tsimport-plugin": "1.0.5",
    "object-path": "0.11.8",
    "pactum": "3.6.0",
    "pactum-matchers": "1.1.6",
    "prettier": "3.2.5",
    "rimraf": "5.0.5",
    "ts-node": "10.9.2",
    "typescript": "5.3.3",
    "wireit": "0.14.4"
  }
}
